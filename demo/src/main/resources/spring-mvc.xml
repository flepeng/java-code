<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"

       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


    <!-- 1、mvc的注解驱动-->
    <mvc:annotation-driven conversion-service="conversionService"/>


    <!-- 2、配置内部资源视图解析器-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--  /jsp/success.jsp  -->
        <property name="prefix" value="/jsp/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>


    <!-- 3、静态资源权限开放-->
    <!--<mvc:resources mapping="/js/**" location="/js/"/>
    <mvc:resources mapping="/img/**" location="/img/"/>-->
    <mvc:default-servlet-handler/>


    <!-- 4、组件扫描  扫描Controller-->
    <context:component-scan base-package="com.flepeng.demo.spring_mvc">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>


    <!-- 5、声明转换器处理器映射器-->
    <!-- 把对象或集合转化成json字符串并回写，为处理器适配器配置消息转换参数，指定使用jackson进行对象或集合的转换-->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
            </list>
        </property>
    </bean>
    <!--SpringMVC 默认提供了一些常用的类型转换器，例如字符串转换成int型。但不是所有的数据类型都提供了转换器，没有提供的就需要自定义转换器，例如：日期类型的数据就需要自定义转换器。-->
    <bean id="converterService" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <list>
                <bean class="com.flepeng.demo.spring_mvc.converter.DateConverter"></bean>
            </list>
        </property>
    </bean>
    <!--引用转换器-->
    <mvc:annotation-driven conversion-service="converterService"/>

    <!-- 6、配置文件上传解析器-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="maxUploadSize" value="500000"/>
    </bean>

    <!--7、配置异常处理器-->
    <!--7.1、使用内置的异常处理器，并进行配置-->
    <!--<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        &lt;!&ndash;<property name="defaultErrorView" value="error"/>&ndash;&gt;
        <property name="exceptionMappings">
            <map>
                <entry key="java.lang.ClassCastException" value="error1"/>
                <entry key="com.flepeng.exception.MyException" value="error2"/>
            </map>
        </property>
    </bean>-->

    <!--7.2、自定义异常处理器-->
    <bean class="com.flepeng.demo.spring_mvc.resolver.MyExceptionResolver"/>


    <!-- 8、配置拦截器-->
    <mvc:interceptors>
        <mvc:interceptor>
            <!--对哪些资源执行拦截操作-->
            <mvc:mapping path="/**"/>
            <bean class="com.flepeng.demo.spring_mvc.interceptor.MyInterceptor2"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <!--对哪些资源执行拦截操作-->
            <mvc:mapping path="/**"/>
            <bean class="com.flepeng.demo.spring_mvc.interceptor.MyInterceptor1"/>
        </mvc:interceptor>
    </mvc:interceptors>

</beans>